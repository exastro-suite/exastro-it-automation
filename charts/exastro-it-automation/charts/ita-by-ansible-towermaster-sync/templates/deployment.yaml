{{/*
#   Copyright 2022 NEC Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ita-by-ansible-towermaster-sync.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ita-by-ansible-towermaster-sync.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ita-by-ansible-towermaster-sync.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ita-by-ansible-towermaster-sync.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ita-by-ansible-towermaster-sync.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ template "ita-by-ansible-towermaster-sync.name" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ template "ita-by-ansible-towermaster-sync.repository" . }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $define := .Values.global -}}
            {{-   range $config, $value := $define.config }}
            {{-     if or (eq $define.name "ita-global") (eq $define.name "ita-database") }}
            - name: {{ $config }}
              valueFrom:
                configMapKeyRef:
                  name: params-{{ $define.name }}
                  key: {{ $config }}
            {{-     end -}}
            {{-   end -}}
            {{-   range $secret, $value := $define.secret }}
            {{-     if or (eq $define.name "ita-global") (eq $define.name "ita-database") }}
            - name: {{ $secret }}
              valueFrom:
                secretKeyRef:
                  name: secret-{{ $define.name }}
                  key: {{ $secret }}
            {{-     end }}
            {{-   end }}
            {{- end -}}
            {{ range $config, $value := .Values.extraEnv }}
            - name: {{ $config }}
              valueFrom:
                configMapKeyRef:
                  name: params-{{ template "ita-by-ansible-towermaster-sync.name" $ }}
                  key: {{ $config }}
            {{- end }}
          volumeMounts:
            - name: volume-{{ template "ita-by-ansible-towermaster-sync.name" . }}-storage
              mountPath: {{ .Values.persistence.mountPath.storage }}
            - name: volume-{{ template "ita-by-ansible-towermaster-sync.name" . }}-homedir
              mountPath: {{ .Values.persistence.mountPath.homeDir }}
            - name: volume-{{ template "ita-by-ansible-towermaster-sync.name" . }}-tmp
              mountPath: {{ .Values.persistence.mountPath.tmp }}
          # livenessProbe:
          #   tcpSocket:
          #     port: 8080
          #   # httpGet:
          #   #   path: /
          #   #   port: 8080
          #   initialDelaySeconds: 5
          #   periodSeconds: 10            
          # readinessProbe:
          #   tcpSocket:
          #     port: 8080
          #   # httpGet:
          #   #   path: /
          #   #   port: 8080
          #   initialDelaySeconds: 5
          #   periodSeconds: 10            
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: volume-{{ template "ita-by-ansible-towermaster-sync.name" . }}-storage
          {{- if and .Values.global.itaGlobalDefinition.persistence.enabled }}
          persistentVolumeClaim:
            claimName: pvc-{{ .Values.global.itaGlobalDefinition.name }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: volume-{{ template "ita-by-ansible-towermaster-sync.name" . }}-homedir
          emptyDir: {}
        - name: volume-{{ template "ita-by-ansible-towermaster-sync.name" . }}-pid
          emptyDir: {}
        - name: volume-{{ template "ita-by-ansible-towermaster-sync.name" . }}-socket
          emptyDir: {}
        - name: volume-{{ template "ita-by-ansible-towermaster-sync.name" . }}-tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
