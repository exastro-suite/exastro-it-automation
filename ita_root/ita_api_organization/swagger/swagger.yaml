openapi: 3.0.3
info:
  title: Exastro IT Automation API
  description: Exastro IT Automation API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: "2.5"
servers:
- url: "https://{host}"
  description: API endpoint
  variables:
    host:
      default: localhost
- url: "http://{host}"
  description: API endpoint
  variables:
    host:
      default: localhost
- url: "{protocol}://{host}:{port}"
  description: API endpoint (Development)
  variables:
    protocol:
      default: https
      enum:
      - http
      - https
    host:
      default: localhost
    port:
      default: "30080"
# security:
# - BearerAuth: []
# - BasicAuth: []
tags:
- name: Menu Info
  description: メニュー情報の取得 / Get menu information
- name: Menu Filter
  description: レコードの取得 / Get records
- name: Menu Maintenance
  description: レコードの操作（登録/更新/廃止/復活/物理削除） / Record operations (register/update/abolish/restore/physical
    delete)
- name: Menu MaintenanceAll
  description: レコードの一括操作（登録/更新/廃止/復活/物理削除） / Bulk record operations (register/update/abolish/restore/physical
    delete)
- name: Menu Excel
  description: Excelの取得・操作 / Get and operate Excel
- name: User Info
  description: ユーザ情報の取得 / Get user information
- name: System Info
  description: ITAの情報取得 / Get ITA information
- name: Menu Create
  description: パラメータシート作成機能 / Parameter sheet creation function
- name: Conductor Controll
  description: Conductorの情報取得・操作 / Get and operate Conductor information
- name: Driver Controll
  description: Driverの情報取得・操作 / Get and operate Driver information
- name: Export Import
  description: データのエクスポート・インポート / Export and import data
- name: Compare Controll
  description: 比較の情報取得・操作 / Get and operate comparison information
- name: Terraform Cloud EP
  description: Terraform Cloud/Enterpriseとの連携 / Integration with Terraform Cloud/Enterprise
- name: CI/CD for IaC
  description: CI/CD for IaCの操作 / CI/CD for IaC operations
- name: OASE
  description: OASE用 / For OASE
- name: Apply
  description: パラメータ適用 / Apply parameters
- name: InternalHealthCheckService
  description: ヘルスチェックに関する操作(内部用) / Health check operations (internal use)
paths:
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/info/:
    get:
      tags:
      - Menu Info
      description: メニューの基本情報および項目情報を取得する
      operationId: get_menu_info
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/info/column/:
    get:
      tags:
      - Menu Info
      description: メニューの項目一覧(REST用項目名)を取得する
      operationId: get_column_list
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/info/pulldown/:
    get:
      tags:
      - Menu Info
      description: IDColumn項目のプルダウン選択用の一覧を取得する
      operationId: get_pulldown_list
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/info/search/candidates/{column}/:
    get:
      tags:
      - Menu Info
      description: 表示フィルタで利用するプルダウン検索の候補一覧を取得する
      operationId: get_search_candidates
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: column
        in: path
        description: REST用項目名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/filter/count/:
    get:
      tags:
      - Menu Filter
      description: レコード全件の件数を取得する
      operationId: get_filter_count
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_4"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_filter_controller
    post:
      tags:
      - Menu Filter
      description: 検索条件を指定し、レコードの件数する
      operationId: post_filter_count
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filter_count_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_5"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_filter_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/filter/:
    get:
      tags:
      - Menu Filter
      description: レコードを全件取得する
      operationId: get_filter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: Base64文字列形式でのファイル取得指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: ファイル取得なし
            value: '.../filter?file=no'
          example2:
            summary: ファイル取得あり
            value: '.../filter'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_filter_controller
    post:
      tags:
      - Menu Filter
      description: 検索条件を指定し、レコードを取得する
      operationId: post_filter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: Base64文字列形式でのファイル取得指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: ファイル取得なし
            value: '.../filter?file=no'
          example2:
            summary: ファイル取得あり
            value: '.../filter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/menu_filter_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_7"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_filter_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/filter/journal/{uuid}/:
    get:
      tags:
      - Menu Filter
      description: レコードの履歴を取得する
      operationId: get_journal
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: uuid
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ファイルダウンロード指定
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_filter_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/{uuid}/{column}/file/:
    get:
      tags:
      - Menu Filter
      description: アップロードファイルをダウンロードする
      operationId: download_file
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: uuid
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: column
        in: path
        description: カラムREST名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_filter_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/{uuid}/{column}/file/journal/{journal_uuid}/:
    get:
      tags:
      - Menu Filter
      description: 履歴のアップロードファイルをダウンロードする
      operationId: download_history_file
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: uuid
        in: path
        description: UUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: column
        in: path
        description: カラムREST名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: journal_uuid
        in: path
        description: 履歴のUUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_filter_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/maintenance/:
    post:
      tags:
      - Menu Maintenance
      description: レコードを登録する
      operationId: maintenance_register
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/menu_maintenance_body"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MAINTENANCE_FORM"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_maintenance_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/maintenance/{uuid}/:
    patch:
      tags:
      - Menu Maintenance
      description: レコードを更新/廃止/復活する
      operationId: maintenance_update
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: uuid
        in: path
        description: 対象のUUID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/maintenance_uuid_body"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MAINTENANCE_FORM"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_maintenance_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/maintenance/all/:
    post:
      tags:
      - Menu MaintenanceAll
      description: レコードを一括で登録/更新/廃止/復活/物理削除する
      operationId: maintenance_all
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: |
          メニュー名

          （一例）

          * 標準メニュー:
            * `operation_list` : オペレーション一覧 / Operation list
          * パラメータシート、データシート:
            * `rest_name` : 登録したrest名
          * 作業管理:
            * `execution_list_ansible_legacy` : ansible legacy 作業履歴 / execution list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: 登録/更新/廃止/復活/物理削除するidとレコードの値を設定
              items:
                allOf:
                - $ref: "#/components/schemas/MAINTENANCE_PARAMETERS"
                - required:
                  - parameter
                  - type
            examples:
              menu:operation_list:
                $ref: "#/components/examples/menu.maintenance.all.operation_list.yaml"
              menu:rest_name:
                $ref: "#/components/examples/menu.maintenance.all.data_sheet.yaml"
              menu:execution_list_ansible_legacy:
                $ref: "#/components/examples/menu.maintenance.all.execution_list_ansible_legacy.yaml"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MAINTENANCE_ALL_FORM"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_maintenance_all_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/excel/format/:
    get:
      tags:
      - Menu Excel
      description: |
        新規登録用Excelを取得する<br>
        ※ダウンロードするのファイルの形式指定が2種類あります。
      operationId: get_excel_format
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ダウンロードするファイルの形式指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: バイナリ形式（推奨）
            value: '.../format/?file=binary'
          example2:
            summary: Base64文字列形式（2.5.0以降非推奨）
            value: '.../format/'
      responses:
        "200":
          description: |
            Success <br>
            ※クエリパラメータにfile=binaryが含まれる場合は、ファイルはバイナリ形式で返されます。<br>
            ※ファイル名は、HTTPヘッダーの"Content-Disposition"に含まれる"filename"を参照します。
          content:
            application/octet-stream:
              example: Binary data
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_8"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_excel_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/excel/:
    get:
      tags:
      - Menu Excel
      description: |
        全件のExcelを取得する<br>
        ※ダウンロードするのファイルの形式指定が2種類あります。
      operationId: get_excel_filter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ダウンロードするファイルの形式指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: バイナリ形式（推奨）
            value: '.../excel/?file=binary'
          example2:
            summary: Base64文字列形式（2.5.0以降非推奨）
            value: '.../excel/'
      responses:
        "200":
          description: |
            Success <br>
            ※クエリパラメータにfile=binaryが含まれる場合は、ファイルはバイナリ形式で返されます。<br>
            ※ファイル名は、HTTPヘッダーの"Content-Disposition"に含まれる"filename"を参照します。
          content:
            application/octet-stream:
              example: Binary data
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_8"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_excel_controller
    post:
      tags:
      - Menu Excel
      description: |
        検索条件を指定し、Excelを取得する<br>
        ※ダウンロードするのファイルの形式指定が2種類あります。
      operationId: post_excel_filter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ダウンロードするファイルの形式指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: バイナリ形式（推奨）
            value: '.../excel/?file=binary'
          example2:
            summary: Base64文字列形式（2.5.0以降非推奨）
            value: '.../excel/'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: 検索条件を設定
              example:
                discard:
                  NORMAL: "0"
                column_name:
                  LIST:
                  - op01
      responses:
        "200":
          description: |
            Success <br>
            ※クエリパラメータにfile=binaryが含まれる場合は、ファイルはバイナリ形式で返されます。<br>
            ※ファイル名は、HTTPヘッダーの"Content-Disposition"に含まれる"filename"を参照します。
          content:
            application/octet-stream:
              example: Binary data
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_9"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_excel_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/excel/maintenance/:
    post:
      tags:
      - Menu Excel
      description: |
        Excelでレコードを登録/更新/廃止/復活する<br>
        ※ver2.5.0以降では、multipart/form-dataでのリクエストを推奨
      operationId: post_excel_maintenance
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              excel: base64 string
          multipart/form-data:
            schema:
              example: |
                ----------------------------XXXXXX
                Content-Disposition: form-data; name="excel"; filename="xxxxx.xlsx"
                Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
                (binary content of the file)
                ----------------------------XXXXXX--
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_10"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_excel_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/excel/journal/:
    get:
      tags:
      - Menu Excel
      description: |
        変更履歴のExcelを取得する<br>
        ※ダウンロードするのファイルの形式指定が2種類あります。
      operationId: get_excel_journal
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ダウンロードするファイルの形式指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: バイナリ形式（推奨）
            value: '.../journal/?file=binary'
          example2:
            summary: Base64文字列形式（2.5.0以降非推奨）
            value: '.../journal/'
      responses:
        "200":
          description: |
            Success <br>
            ※クエリパラメータにfile=binaryが含まれる場合は、ファイルはバイナリ形式で返されます。<br>
            ※ファイル名は、HTTPヘッダーの"Content-Disposition"に含まれる"filename"を参照します。
          content:
            application/octet-stream:
              example: Binary data
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_8"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_excel_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/user/:
    get:
      tags:
      - User Info
      description: ユーザの権限情報とWebのテーブル設定を取得する
      operationId: get_user_auth
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_11"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.user_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/user/menus/:
    get:
      tags:
      - User Info
      description: ユーザがアクセス可能なメニューグループ・メニューの一覧を取得する
      operationId: get_user_menus
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_12"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.user_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/user/menus/panels/:
    get:
      tags:
      - User Info
      description: メニューグループの画像を取得する
      operationId: get_menu_group_panels
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_13"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.user_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/user/table_settings/:
    post:
      tags:
      - User Info
      description: Webのテーブル設定を登録する
      operationId: post_table_settings
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: テーブル設定
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.user_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/user/dashboard/:
    get:
      tags:
      - User Info
      description: Dashboardのwidget設定を取得する
      operationId: get_widget_settings
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.user_info_controller
    post:
      tags:
      - User Info
      description: Dashboardのwidget設定を登録する
      operationId: post_widget_settings
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: widget設定
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.user_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/version/:
    get:
      tags:
      - System Info
      description: ITAのバージョン情報を取得する
      operationId: get_ita_version
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_14"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.system_info_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/execute/:
    post:
      tags:
      - Menu Create
      description: パラメータシート定義および作成の実行
      operationId: define_and_execute_menu_create
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              description: パラメータシート定義用パラメータ
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_create_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/:
    get:
      tags:
      - Menu Create
      description: パラメータシート定義・作成(新規)用の情報取得
      operationId: get_menu_create_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_create_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/{menu_create}/:
    get:
      tags:
      - Menu Create
      description: パラメータシート定義・作成(既存)用の情報取得
      operationId: get_exist_menu_create_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu_create
        in: path
        description: 「パラメータシート定義一覧」の「メニュー名(REST)」
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_create_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/pulldown/initial/{menu}/{column}/:
    get:
      tags:
      - Menu Create
      description: 「プルダウン選択」項目で選択した対象の「初期値」候補一覧取得
      operationId: get_pulldown_initial
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: 「プルダウン選択」で指定した対象のメニュー名(rest用)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: column
        in: path
        description: 「プルダウン選択」で指定した対象のカラム名(rest用)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_create_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/create/define/reference/item/{menu}/{column}/:
    get:
      tags:
      - Menu Create
      description: 「プルダウン選択」項目で選択した対象の「参照項目」候補一覧取得
      operationId: get_reference_item
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: 「プルダウン選択」で指定した対象のメニュー名(rest用)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: column
        in: path
        description: 「プルダウン選択」で指定した対象のカラム名(rest用)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_create_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/parameter_collection/:
    get:
      tags:
      - Menu Create
      description: パラメータシートの一覧を取得する
      operationId: get_parameter_collection
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_15"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_create_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/parameter_collection/filter_data/:
    get:
      tags:
      - Menu Create
      description: パラメータ集の検索条件を取得する
      operationId: get_parameter_collection_filter_terms_get
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_16"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_create_controller
    post:
      tags:
      - Menu Create
      description: パラメータ集の検索条件を登録・更新する
      operationId: get_parameter_collection_filter_terms_update
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: 検索条件を登録・更新する
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_17"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_create_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/parameter_collection/filter_data/{uuid}:
    delete:
      tags:
      - Menu Create
      description: パラメータ集の検索条件を削除する
      operationId: get_parameter_collection_filter_terms_delete
      parameters:
      - name: organization_id
        in: path
        description: organizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: uuid
        in: path
        description: uuid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_18"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.menu_create_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/class/info/:
    get:
      tags:
      - Conductor Controll
      description: ConductorClassの基本情報取得
      operationId: get_conductor_class_info
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_19"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/class/{conductor_class_id}/:
    get:
      tags:
      - Conductor Controll
      description: ConductorClassの情報取得
      operationId: get_conductor_class_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_class_id
        in: path
        description: Conductor Class ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/class/maintenance/:
    post:
      tags:
      - Conductor Controll
      description: Conductorの新規登録
      operationId: post_conductor_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: 登録するConductorの構成情報
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/class/maintenance/{conductor_class_id}/:
    patch:
      tags:
      - Conductor Controll
      description: Conductorの更新
      operationId: patch_conductor_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_class_id
        in: path
        description: Conductor Class ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: 更新するConductorの構成情報
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/info/:
    get:
      tags:
      - Conductor Controll
      description: "Conductor,Operationのメニューの基本情報および項目情報を取得する"
      operationId: get_conductor_execute_info
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_20"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/filter/{target}/:
    post:
      tags:
      - Conductor Controll
      description: "Conductor,Operationを対象に、検索条件を指定し、レコードを取得する"
      operationId: post_execute_filter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: target
        in: path
        description: conductor_list or operation_list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filter_target_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/filter/{target}/search/candidates/{column}/:
    get:
      tags:
      - Conductor Controll
      description: 表示フィルタで利用するプルダウン検索の候補一覧を取得する
      operationId: get_execute_search_candidates
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: target
        in: path
        description: conductor_list or operation_list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: column
        in: path
        description: REST用項目名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/class/info/:
    get:
      tags:
      - Conductor Controll
      description: ConductorClassの基本情報取得
      operationId: get_conductor_execute_class_info
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_19"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/class/{conductor_class_id}/:
    get:
      tags:
      - Conductor Controll
      description: ConductorClassの情報取得
      operationId: get_conductor_execute_class_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_class_id
        in: path
        description: Conductor Class ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/execute/:
    post:
      tags:
      - Conductor Controll
      description: Conductor作業実行
      operationId: post_conductor_excecute
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/conductor_execute_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/info/{conductor_instance_id}/:
    get:
      tags:
      - Conductor Controll
      description: Conductorの基本情報取得
      operationId: get_conductor_info
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_instance_id
        in: path
        description: Conductor Instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_19"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/:
    get:
      tags:
      - Conductor Controll
      description: Conductor作業の情報取得
      operationId: get_conductor_instance_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_instance_id
        in: path
        description: Conductor Instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/cancel/:
    patch:
      tags:
      - Conductor Controll
      description: Conductor作業の予約取り消し
      operationId: patch_conductor_cancel
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_instance_id
        in: path
        description: Conductor Instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/scram/:
    patch:
      tags:
      - Conductor Controll
      description: Conductor作業の緊急停止
      operationId: patch_conductor_scram
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_instance_id
        in: path
        description: Conductor Instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  ? /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/node/{node_instance_id}/relese/
  : patch:
      tags:
      - Conductor Controll
      description: Conductor作業の一時停止解除
      operationId: patch_conductor_relese
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_instance_id
        in: path
        description: Conductor Instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: node_instance_id
        in: path
        description: Node Instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/input_data/:
    get:
      tags:
      - Conductor Controll
      description: |
        Conductor作業の投入データ<br>
        ※ダウンロードするのファイルの形式指定が2種類あります。
      operationId: get_conductor_input_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_instance_id
        in: path
        description: Conductor Instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ファイルデータの形式指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: バイナリ形式（推奨）
            value: '.../input_data/?file=binary'
          example2:
            summary: Base64文字列形式(2.5.0以降非推奨)
            value: '.../input_data/'
      responses:
        "200":
          description: |
            Success <br>
            ※クエリパラメータにfile=binaryが含まれる場合は、ファイルはバイナリ形式で返されます。<br>
            ※ファイル名は、HTTPヘッダーの"Content-Disposition"に含まれる"filename"を参照します。
          content:
            application/octet-stream:
              example: Binary data
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_22"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/conductor/{conductor_instance_id}/result_data/:
    get:
      tags:
      - Conductor Controll
      description: |
        Conductor作業の結果データ<br>
        ※ダウンロードするのファイルの形式指定が2種類あります。
      operationId: get_conductor_result_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conductor_instance_id
        in: path
        description: Conductor Instance ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ファイルデータの形式指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: バイナリ形式（推奨）
            value: '.../result_data/?file=binary'
          example2:
            summary: Base64文字列形式(2.5.0以降非推奨)
            value: '.../result_data/'
      responses:
        "200":
          description: |
            Success <br>
            ※クエリパラメータにfile=binaryが含まれる場合は、ファイルはバイナリ形式で返されます。<br>
            ※ファイル名は、HTTPヘッダーの"Content-Disposition"に含まれる"filename"を参照します。
          content:
            application/octet-stream:
              example: Binary data
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_23"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.conductor_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute/:
    post:
      tags:
      - Driver Controll
      description: Driver作業実行
      operationId: post_driver_excecute
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/driver_execute_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute_dry_run/:
    post:
      tags:
      - Driver Controll
      description: |
        Driver作業実行（ドライラン）</br>
        AnsibleDriverの場合はDryRun、TerraformDriverの場合はPlanのみの実行を行う
      operationId: post_driver_execute_dry_run
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/driver_execute_dry_run_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute_check_parameter/:
    post:
      tags:
      - Driver Controll
      description: Driver作業実行(実行時に使用するパラメータ確認)
      operationId: post_driver_execute_check_parameter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/driver_execute_check_parameter_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute_delete_resource/:
    post:
      tags:
      - Driver Controll
      description: Driver作業実行(リソース削除)
      operationId: post_driver_execute_delete_resource
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/driver_execute_delete_resource_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/{execution_no}/:
    get:
      tags:
      - Driver Controll
      description: Driver作業実行の状態取得
      operationId: get_driver_execute_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_no
        in: path
        description: 実行No
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/{execution_no}/populated_data:
    get:
      tags:
      - Driver Controll
      description: 作業実行の投入データ取得
      operationId: get_execute_populated_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_no
        in: path
        description: 実行No
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/{execution_no}/result_data:
    get:
      tags:
      - Driver Controll
      description: 作業実行の結果データ取得
      operationId: get_execute_result_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_no
        in: path
        description: 実行No
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/{execution_no}/cancel/:
    patch:
      tags:
      - Driver Controll
      description: Driver作業実行の予約取消
      operationId: post_driver_cancel
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_no
        in: path
        description: 実行No
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/{execution_no}/scram/:
    patch:
      tags:
      - Driver Controll
      description: Driver作業実行の緊急停止
      operationId: post_driver_scram
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_no
        in: path
        description: 実行No
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute/info/:
    get:
      tags:
      - Driver Controll
      description: "Movement,Operationのメニューの基本情報および項目情報を取得する"
      operationId: get_driver_execute_info
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_25"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute/filter/{target}/:
    post:
      tags:
      - Driver Controll
      description: "Movement,Operationを対象に、検索条件を指定し、レコードを取得する"
      operationId: post_driver_execute_filter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: target
        in: path
        description: movement_list or operation_list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filter_target_body_1"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/driver/execute/filter/{target}/search/candidates/{column}/:
    get:
      tags:
      - Driver Controll
      description: 表示フィルタで利用するプルダウン検索の候補一覧を取得する
      operationId: get_driver_execute_search_candidates
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: target
        in: path
        description: movement_list or operation_list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: column
        in: path
        description: REST用項目名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.driver_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/export/info/:
    get:
      tags:
      - Export Import
      description: メニューエクスポート対象メニュー一覧取得
      operationId: get_menu_export_list
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_26"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.export_import_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/bulk/export/execute/:
    post:
      tags:
      - Export Import
      description: メニュー一括エクスポート実行
      operationId: execute_menu_bulk_export
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/export_execute_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_27"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.export_import_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/import/upload/:
    post:
      tags:
      - Export Import
      description: |
        メニューインポートのアップロード<br>
        ※ver2.5.0以降では、multipart/form-dataでのリクエストを推奨
      operationId: post_menu_import_upload
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              file:
                name: ita_exportdata_XXXXXXXXXXXX.kym
                base64: base64 string
          multipart/form-data:
            schema:
              type: object
            examples:
              form-data:
                $ref: "#/components/examples/MENU_UPLOAD_FORM"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_28"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.export_import_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/import/execute/:
    post:
      tags:
      - Export Import
      description: メニューインポート実行
      operationId: execute_menu_import
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/import_execute_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_27"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.export_import_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/excel/bulk/export/info/:
    get:
      tags:
      - Export Import
      description: Excel一括エクスポート対象メニュー一覧取得
      operationId: get_excel_bulk_export_list
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.export_import_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/excel/bulk/export/execute/:
    post:
      tags:
      - Export Import
      description: Excel一括エクスポート実行
      operationId: execute_excel_bulk_export
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/export_execute_body_1"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.export_import_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/excel/bulk/upload/:
    post:
      tags:
      - Export Import
      description: |
        Excel一括インポートのアップロード<br>
        ※ver2.5.0以降では、multipart/form-dataでのリクエストを推奨
      operationId: post_excel_bulk_upload
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              zipfile:
                name: ITA_FILES_XXXXXXXXXXXX.zip
                base64: base64 string
          multipart/form-data:
            schema:
              type: object
            examples:
              form-data:
                $ref: "#/components/examples/EXCEL_BULK_UPLOAD_FORM"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.export_import_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/excel/bulk/import/execute/:
    post:
      tags:
      - Export Import
      description: Excel一括インポート実行
      operationId: execute_excel_bulk_import
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/import_execute_body_1"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.export_import_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/compare/info/:
    get:
      tags:
      - Compare Controll
      description: 比較実行の基本情報取得
      operationId: get_compares_info
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.compare_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/compare/execute/info/:
    get:
      tags:
      - Compare Controll
      description: "Compare,Deviceのメニューの基本情報および項目情報を取得する"
      operationId: get_compare_execute_info
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_29"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.compare_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/compare/execute/filter/{target}/:
    post:
      tags:
      - Compare Controll
      description: "Compare,Deviceを対象に、検索条件を指定し、レコードを取得する"
      operationId: post_copmare_execute_filter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: target
        in: path
        description: compare_list or device_list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filter_target_body_2"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.compare_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/compare/execute/filter/{target}/search/candidates/{column}/:
    get:
      tags:
      - Compare Controll
      description: 表示フィルタで利用するプルダウン検索の候補一覧を取得する
      operationId: get_compare_execute_search_candidates
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: target
        in: path
        description: conductor_list or operation_list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: column
        in: path
        description: REST用項目名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.compare_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/compare/execute/:
    post:
      tags:
      - Compare Controll
      description: 比較実行
      operationId: post_compare_execute
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/compare_execute_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.compare_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/compare/execute/output/:
    post:
      tags:
      - Compare Controll
      description: |
        比較実行ファイル出力<br>
        ※ダウンロードするのファイルの形式指定が2種類あります。
      operationId: post_compare_execute_output
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ファイルデータの形式指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: バイナリ形式（推奨）
            value: '.../output/?file=binary'
          example2:
            summary: Base64文字列形式(2.5.0以降非推奨)
            value: '.../output/'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/execute_output_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_30"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.compare_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/menu/{menu}/compare/execute/file/:
    post:
      tags:
      - Compare Controll
      description: 比較実行(ファイル)
      operationId: post_compare_execute_file
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ファイルダウンロード指定
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/execute_file_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.compare_controll_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/organization/:
    get:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseからOrganizationの一覧を取得する
      operationId: get_terraform_organization_list
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
    post:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseにOrganizationを作成する
      operationId: create_terraform_organization
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/terraform_organization_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/organization/{tf_organization_name}/:
    delete:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/Enterpriseに登録されているOrganizationを削除する
      operationId: delete_terraform_organization
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
    patch:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/Enterpriseに登録されているOrganizationを更新する
      operationId: update_terraform_organization
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/organization_tf_organization_name_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/organization/{tf_organization_name}/check/:
    get:
      tags:
      - Terraform Cloud EP
      description: 対象のOrganizatinoの連携状態を確認する
      operationId: check_terraform_organization
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/workspace/:
    get:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseからWorkspaceの一覧を取得する
      operationId: get_terraform_workspace_list
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/workspace/{tf_organization_name}/:
    post:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseにWorkspaceを作成する
      operationId: create_terraform_workspace
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/workspace_tf_organization_name_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/workspace/{tf_organization_name}/{tf_workspace_name}/:
    delete:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/Enterpriseに登録されているWorkspaceを削除する
      operationId: delete_terraform_workspace
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_workspace_name
        in: path
        description: Terraform Workspace Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
    patch:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/Enterpriseに登録されているWorkspaceを更新する
      operationId: update_terraform_workspace
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_workspace_name
        in: path
        description: Terraform Workspace Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tf_organization_name_tf_workspace_name_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/organization/{tf_organization_name}/{tf_workspace_name}/check/:
    get:
      tags:
      - Terraform Cloud EP
      description: 対象のWorkspaceの連携状態を確認する
      operationId: check_terraform_workspace
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_workspace_name
        in: path
        description: Terraform Workspace Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/policy/:
    get:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseからPolicyの一覧を取得する
      operationId: get_terraform_policy_list
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/policy/{tf_organization_name}/download/{policy_name}/:
    post:
      tags:
      - Terraform Cloud EP
      description: |
        連携しているTerraform Cloud/EnterpriseからPolicyコードをダウンロードする<br>
        ※ダウンロードするのファイルの形式指定が2種類あります。
      operationId: get_terraform_policy_file
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_name
        in: path
        description: Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file
        in: query
        description: ダウンロードするファイルの形式指定
        required: false
        style: form
        explode: true
        schema:
          type: string
        examples:
          example1:
            summary: バイナリ形式
            value: ".../download/{policy_name}/?file=binary"
          example2:
            summary: Base64文字列形式（2.5.0以降非推奨）
            value: ".../download/{policy_name}/"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/download_policy_name_body"
      responses:
        "200":
          description: |
            Success <br>
            ※クエリパラメータにfile=binaryが含まれる場合は、ファイルはバイナリ形式で返されます。<br>
            ※ファイル名は、HTTPヘッダーの"Content-Disposition"に含まれる"filename"を参照します。
          content:
            application/octet-stream:
              example: Binary data
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_31"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/policy/{tf_organization_name}/delete/{policy_name}/:
    delete:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseからPolicyを削除する
      operationId: delete_terraform_policy
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_name
        in: path
        description: Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/policyset/:
    get:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseからPolicySetの一覧を取得する
      operationId: get_terraform_policy_set_list
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/policyset/{tf_organization_name}/delete/{policy_set_name}/:
    delete:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseからPolicySetを削除する
      operationId: delete_terraform_policy_set
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_set_name
        in: path
        description: Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  ? /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/policyset/{tf_organization_name}/relationship/{policy_set_name}/workspace/{tf_workspace_name}/
  : delete:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseからPolicySetとWorkspaceの紐付けを解除する
      operationId: delete_terraform_policy_set_relationship_workspace
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_set_name
        in: path
        description: Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_workspace_name
        in: path
        description: Terraform Workspace Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  ? /api/{organization_id}/workspaces/{workspace_id}/ita/terraform/policyset/{tf_organization_name}/relationship/{policy_set_name}/policy/{policy_name}/
  : delete:
      tags:
      - Terraform Cloud EP
      description: 連携しているTerraform Cloud/EnterpriseからPolicySetとPolicyの紐付けを解除する
      operationId: delete_terraform_policy_set_relationship_policy
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tf_organization_name
        in: path
        description: Terraform Organization Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_set_name
        in: path
        description: Policy Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policy_name
        in: path
        description: Terraform Workspace Name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.terraform_cloud_ep_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/cicd_for_iac/resume/repository/{uuid}/:
    post:
      tags:
      - CI/CD for IaC
      description: リモートリポジトリの再開
      operationId: post_cicd_for_iac_resume_repository
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: uuid
        in: path
        description: uuid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.cicd_for_ia_c_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/cicd_for_iac/resume/file_link/{uuid}/:
    post:
      tags:
      - CI/CD for IaC
      description: 資材紐付の再開
      operationId: post_cicd_for_iac_resume_filelink
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: uuid
        in: path
        description: uuid
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.cicd_for_ia_c_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/oase/filter/{menu}/:
    get:
      tags:
      - OASE
      description: OASEのレコードを全件取得する
      operationId: get_oase_filter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.oase_controller
    post:
      tags:
      - OASE
      description: 検索条件を指定し、レコードを取得する
      operationId: post_oase_filter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: menu
        in: path
        description: メニュー名
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filter_menu_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_7"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.oase_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/oase/event_flow/history/:
    post:
      tags:
      - OASE
      description: 検索条件を指定し、イベントフローで扱う履歴情報（イベント履歴、アクション履歴）を取得する
      operationId: post_oase_history
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/event_flow_history_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_32"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.oase_controller
  /api/{organization_id}/workspaces/{workspace_id}/ita/apply/:
    post:
      tags:
      - Apply
      description: オペレーションの生成からパラメータの適用までを行いConductor作業実行する
      operationId: post_apply_parameter
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ita_apply_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.apply_controller
  /internal-api/health-check/liveness:
    get:
      tags:
      - InternalHealthCheckService
      summary: Internal health check liveness
      operationId: internal_health_check_liveness
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.internal_health_check_service_controller
  /internal-api/health-check/readiness:
    get:
      tags:
      - InternalHealthCheckService
      summary: Internal health check readiness
      operationId: internal_health_check_readiness
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseOk"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ERROR_TEMPLATE"
      x-openapi-router-controller: controllers.internal_health_check_service_controller
components:
  schemas:
    TABLE:
      type: object
      properties:
        PAGE_NO:
          type: integer
        TD:
          type: object
        TD_IHP:
          type: object
        UNIQUE_VAL:
          type: object
    COLUMN_GROUP_INFO:
      type: object
      additionalProperties:
        type: object
        properties:
          column_group_id:
            type: string
          column_group_name:
            type: string
          parent_column_group_id:
            type: string
          parent_column_group_name:
            type: string
          columns:
            type: array
            items: {}
      description: "カラムグループの並び順でg1, g2, g3...というkey名に格納される"
    COLUMN_INFO:
      type: object
      additionalProperties:
        type: object
        properties:
          column_id:
            type: string
            description: 項目ID
          column_name:
            type: string
            description: 表示用項目名
          column_name_rest:
            type: string
            description: REST用項目名
          column_group_id:
            type: string
            description: カラムグループID
          column_group_name:
            type: string
            description: カラムグループ名
          column_type:
            type: integer
            description: カラムタイプ
          column_disp_seq:
            type: integer
            description: 表示順
          description:
            type: string
            description: 項目説明
          ref_table_name:
            type: string
            description: ID連携テーブル名
          ref_pkey_name:
            type: string
            description: ID連携テーブルPK
          ref_col_name:
            type: string
            description: ID連携項目名
          ref_sort_conditions:
            type: string
            description: ID連携ソート条件
          ref_multi_lang:
            type: string
            description: ID連携多言語対応有無
          col_name:
            type: string
            description: データベース上のカラム名
          save_type:
            type: string
            description: データベース上の保存形式
          auto_input:
            type: integer
            description: 自動入力フラグ
          input_item:
            type: integer
            description: 入力対象フラグ
          view_item:
            type: string
            description: 出力対象フラグ
          unique_item:
            type: integer
            description: 必須入力フラグ
          required_item:
            type: integer
            description: 一意制約フラグ
          initial_value:
            type: string
            description: 入力欄初期値
          validate_option:
            type: object
            description: バリデーション値
          before_validate_register:
            type: object
            description: 個別バリデーション(前)
          after_validate_register:
            type: object
            description: 個別バリデーション(後)
      description: "column_disp_seqの順番で、c1, c2, c3...というkey名に格納される"
    MENU_INFO:
      type: object
      properties:
        menu_info:
          type: string
          description: メニューの説明
        menu_group_id:
          type: string
          description: メニューグループID
        menu_group_name:
          type: string
          description: メニューグループの名称
        parent_menu_group_id:
          type: string
          description: 親メニューグループID
        parent_menu_group_name:
          type: string
          description: 親メニューグループの名称
        menu_id:
          type: string
          description: メニューID
        menu_name:
          type: string
          description: メニューの名称
        sheet_type:
          type: string
          description: シートタイプ
        history_table_flag:
          type: boolean
          description: 履歴テーブル有無
        table_name:
          type: string
          description: テーブル名
        view_name:
          type: string
          description: ビュー名
        pk_column_name_rest:
          type: string
          description: PK項目名(REST）
        inherit:
          type: boolean
          description: 継承フラグ
        vertical:
          type: boolean
          description: 縦型フラグ
        row_insert_flag:
          type: boolean
          description: 登録許可フラグ
        row_update_flag:
          type: boolean
          description: 更新許可フラグ
        row_disuse_flag:
          type: boolean
          description: 廃止許可フラグ
        row_reuse_flag:
          type: boolean
          description: 復活許可フラグ
        row_delete_flag:
          type: boolean
          description: 削除許可フラグ
        login_necessity:
          type: boolean
          description: 認証有無
        auto_filter_flg:
          type: boolean
          description: オートフィルタフラグ
        initial_filter_flg:
          type: boolean
          description: 初回フィルタフラグ
        web_print_limit:
          type: integer
          description: Web表示最大行数
        web_print_confirm:
          type: integer
          description: Web表示前確認行数
        xls_print_limit:
          type: integer
          description: Excel出力最大行数
        sort_key:
          type: string
          description: ソートキー
        privilege:
          type: integer
          description: メニューに対する権限
        columns:
          type: array
          description: メニュー表示用のカラムおよびカラムグループの並び順
          items: {}
    ERROR_TEMPLATE:
      type: object
      properties:
        result:
          type: string
          example: 001-002
        message:
          type: string
    FILTER_REQUEST_PARAMETERS:
      type: object
      properties:
        NORMAL:
          type: string
        LIST:
          type: array
          items: {}
        RANGE:
          $ref: "#/components/schemas/FILTER_REQUEST_PARAMETERS_RANGE"
    FILTER_PARAMETERS:
      type: object
      properties:
        parameter:
          $ref: "#/components/schemas/FILTER_PARAMETERS_parameter"
        file:
          $ref: "#/components/schemas/FILTER_PARAMETERS_file"
      example:
        file:
          rest_key_name: base64 encode file（empty string if ?file=no）
        parameter:
          rest_key_name: rest_key_name
    MAINTENANCE_PARAMETER_P:
      type: object
      properties:
        rest_key_name:
          type: string
    MAINTENANCE_PARAMETER_F:
      type: object
      properties:
        rest_key_name:
          type: string
          example: base64 encode file
    MAINTENANCE_PARAMETERS:
      type: object
      properties:
        parameter:
          $ref: "#/components/schemas/FILTER_PARAMETERS_parameter"
        file:
          $ref: "#/components/schemas/MAINTENANCE_PARAMETERS_file"
        type:
          type: string
          enum:
          - Register
          - Update
          - Restore
          - Discard
          - Delete
    MAINTENANCE_FORM:
      type: object
      properties:
        json_parameters:
          type: string
          description: parameter:リクエストとtype:実行種別(登録/更新/廃止/復活)を指定。 parameter下では、項目名と値をkey-value形式で指定。
          example: "{\"parameter\":{\"rest_key_name\":\"string\"},\"file\":{\"rest_key_name\"\
            :\"base64 encode file\"}}"
        rest_key_name:
          type: array
          description: rest_key_name:parametersのファイルアップロードの対象を指定。
          items:
            type: string
            format: binary
    MAINTENANCE_ALL_FORM:
      type: object
      properties:
        json_parameters:
          type: string
          description: parameter:リクエストとtype:実行種別(登録/更新/廃止/復活)をlist構造で指定。 parameter下では、項目名と値をkey-value形式で指定。
          example: "[{\"rest_key_name\":\"string\",\"type\":\"Register/Update\"}]"
        xxx.rest_key_name:
          type: array
          description: xxx:parametersのlist番号を指定。 rest_key_name:parametersのファイルアップロードの対象を指定。
          items:
            type: string
            format: binary
    CONDUCTOR_INFO_LIST:
      type: object
      properties:
        conductor_status:
          type: array
          example:
          - id: string
            name: string
          items: {}
        node_status:
          type: array
          example:
          - id: string
            name: string
          items: {}
        node_type:
          type: array
          example:
          - id: string
            name: string
          items: {}
        movement:
          type: array
          example:
          - id: string
            name: string
          items: {}
        operation:
          type: array
          example:
          - id: string
            name: string
          items: {}
        conductors:
          type: array
          example:
          - id: string
            name: string
          items: {}
    CONDUCTOR_INFO_DICT:
      type: object
      properties:
        conductor_status:
          type: array
          example:
            status_id1: status_name1
            status_id2: status_name2
          items: {}
        node_status:
          type: array
          example:
            status_id1: status_name1
            status_id2: status_name2
          items: {}
        node_type:
          type: array
          example:
            node_type_id1: node_type_name1
            node_type_id2: node_type_name2
          items: {}
        movement:
          type: array
          example:
            movement_id1: movement_name1
            movement_id2: movement_name2
          items: {}
        operation:
          type: array
          example:
            operation_id1: operation_name1
            operation_id2: operation_name2
          items: {}
        conductor:
          type: array
          example:
            conductor_id1: conductor_name1
            conductor_id2: conductor_name2
          items: {}
    CONDUCTOR_RESULT:
      type: object
      properties:
        conductor_instance_id:
          type: string
          example: ConductorインスタンスID
        conductor_name:
          type: string
          example: Conductor名
        status_id:
          type: string
          example: ステータスID
        execution_user:
          type: string
          example: 作業実行ユーザー
        abort_execute_flag:
          type: string
          example: 緊急停止フラグ
        operation_id:
          type: string
          example: オペレーションID
        operation_name:
          type: string
          example: オペレーション名
        time_book:
          type: string
          example: 予約日時
        time_start:
          type: string
          example: 開始日時
        time_end:
          type: string
          example: 終了日時
        execution_log:
          type: string
          example: 実行ログ
        remarks:
          type: string
          example: 備考
    NODE_RESULT:
      type: object
      properties:
        node_name:
          $ref: "#/components/schemas/NODE_RESULT_node_name"
    ApplyParameterTypeA:
      type: array
      items:
        $ref: "#/components/schemas/ApplyParameterTypeA_inner"
    ApplyParameterTypeB:
      type: array
      items:
        $ref: "#/components/schemas/ApplyParameterTypeB_inner"
    ApplyParameterTypeC:
      type: object
      properties:
        rest_key_name:
          type: array
          items:
            $ref: "#/components/schemas/ApplyParameterTypeC_rest_key_name"
    ApplyParameterTypeD:
      type: object
      properties:
        rest_key_name:
          $ref: "#/components/schemas/ApplyParameterTypeC_rest_key_name"
    responseOk:
      title: A successful base response.
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        data:
          type: boolean
        message:
          type: string
      example:
        result: 000-00000
        data: true
        message: message
    inline_response_200:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_data"
    inline_response_200_1:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: array
            example:
            - column1
            - column2
            - column3
            items: {}
    inline_response_200_2:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: array
            example:
              IDColumn1:
                id1: name1
                id2: name2
                id3: name3
              IDColumn2:
                id1: name1
                id2: name2
                id3: name3
              IDColumn3:
                id1: name1
                id2: name2
                id3: name3
            items: {}
    inline_response_200_3:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: array
            example:
              id1: name1
              id2: name2
              id3: name3
            items: {}
    inline_response_200_4:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: number
    filter_count_body:
      properties:
        rest_key_name:
          $ref: "#/components/schemas/FILTER_REQUEST_PARAMETERS"
      description: 検索条件を設定
    inline_response_200_5:
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        data:
          type: number
        message:
          type: string
      example:
        result: 000-00000
        data: 0.80082819046101150206595775671303272247314453125
        message: message
    inline_response_200_6:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: array
            items:
              $ref: "#/components/schemas/FILTER_PARAMETERS"
    menu_filter_body:
      properties:
        rest_key_name:
          $ref: "#/components/schemas/FILTER_REQUEST_PARAMETERS"
      description: 検索条件を設定
    inline_response_200_7:
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        data:
          type: array
          items:
            $ref: "#/components/schemas/FILTER_PARAMETERS"
        message:
          type: string
      example:
        result: 000-00000
        data:
        - file:
            rest_key_name: base64 encode file（empty string if ?file=no）
          parameter:
            rest_key_name: rest_key_name
        - file:
            rest_key_name: base64 encode file（empty string if ?file=no）
          parameter:
            rest_key_name: rest_key_name
        message: message
    menu_maintenance_body:
      properties:
        parameter:
          $ref: "#/components/schemas/MAINTENANCE_PARAMETER_P"
        file:
          $ref: "#/components/schemas/MAINTENANCE_PARAMETER_F"
      description: 登録する値を設定
    maintenance_uuid_body:
      properties:
        parameter:
          $ref: "#/components/schemas/MAINTENANCE_PARAMETER_P"
        file:
          $ref: "#/components/schemas/MAINTENANCE_PARAMETER_F"
      description: 更新する値を設定。廃止/復活は廃止フラグを更新することで実施。
    inline_response_200_8:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: string
            example: base64 string
    inline_response_200_9:
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        data:
          type: string
          example: base64 string
        message:
          type: string
    inline_response_200_10:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_10_data"
    inline_response_200_11:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_11_data"
          message:
            type: string
            example: SUCCESS
    inline_response_200_12:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_12_data"
          message:
            type: string
            example: SUCCESS
    inline_response_200_13:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: object
            additionalProperties:
              type: string
              properties:
                panelFileEncoded:
                  description: メニューグループの画像ファイルをbase64エンコードした値
            description: メニューグループIDがkeyになる
          message:
            type: string
            example: SUCCESS
    inline_response_200_14:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: object
            example:
              version: string
              installed_driver:
              - string
              - string
    inline_response_200_15:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: array
            example:
              operation: []
              host: []
              hostgroup: []
              parameter_sheet: []
            items: {}
    inline_response_200_16:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: array
            example:
              uuid: xxx
              filter_name: xxx
              filter_json: xxx
            items: {}
    inline_response_200_17:
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        message:
          type: string
      example:
        result: 000-00000
        message: message
    inline_response_200_18:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: object
    inline_response_200_19:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_19_data"
    inline_response_200_20:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_20_data"
    filter_target_body:
      properties:
        rest_key_name:
          $ref: "#/components/schemas/FILTER_REQUEST_PARAMETERS"
      description: 検索条件を設定
    conductor_execute_body:
      type: object
      properties:
        conductor_class_name:
          type: string
        operation_name:
          type: string
        schedule_date:
          type: string
          example: YYYY/MM/DD hh:mm
        conductor_data:
          type: object
      description: 作業実行するConductorの構成情報
    inline_response_200_21:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_21_data"
    inline_response_200_22:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_22_data"
    inline_response_200_23:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_23_data"
    driver_execute_body:
      type: object
      properties:
        movement_name:
          type: string
        operation_name:
          type: string
        schedule_date:
          type: string
          example: YYYY/MM/DD hh:mm
      description: 作業実行するDriverの構成情報
    inline_response_200_24:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: object
            example:
              execution_no: string
    driver_execute_dry_run_body:
      type: object
      properties:
        movement_name:
          type: string
        operation_name:
          type: string
        schedule_date:
          type: string
          example: YYYY/MM/DD hh:mm
      description: 作業実行するDriverの構成情報
    driver_execute_check_parameter_body:
      type: object
      properties:
        movement_name:
          type: string
        operation_name:
          type: string
        schedule_date:
          type: string
          example: YYYY/MM/DD hh:mm
      description: 作業実行するDriverの構成情報
    driver_execute_delete_resource_body:
      type: object
      properties:
        tf_workspace_name:
          type: string
      description: 作業実行するDriverの構成情報
    inline_response_200_25:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_25_data"
    filter_target_body_1:
      properties:
        rest_key_name:
          $ref: "#/components/schemas/FILTER_REQUEST_PARAMETERS"
      description: 検索条件を設定
    inline_response_200_26:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_26_data"
    export_execute_body:
      type: object
      properties:
        mode:
          type: string
          example: "1: 環境移行 / 2: 時刻指定"
        specified_timestamp:
          type: string
          example: YYYY/MM/DD hh:mm
        abolished_type:
          type: string
          example: "1: 廃止を含む / 2: 廃止を除く"
        journal_type:
          type: string
          example: "1: 履歴あり / 2: 履歴なし"
        menu:
          type: array
          example:
          - system_settings
          - menu_group_list
          - menu_list
          - <menu_name_rest 1>
          - <menu_name_rest 2>
          items: {}
    inline_response_200_27:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_27_data"
    inline_response_200_28:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_28_data"
    import_execute_body:
      type: object
      properties:
        upload_id:
          type: string
          example: xxxxxxxxxxxxxxxxxxxxxxxx
        file_name:
          type: string
          example: ita_exportdata_yyyymmddhhiiss.kym
        menu:
          type: array
          example:
          - system_settings
          - menu_group_list
          - menu_list
          - <menu_name_rest 1>
          - <menu_name_rest 2>
          items: {}
    export_execute_body_1:
      properties:
        rest_key_name:
          $ref: "#/components/schemas/FILTER_REQUEST_PARAMETERS"
      description: 検索条件を設定
    import_execute_body_1:
      properties:
        rest_key_name:
          $ref: "#/components/schemas/FILTER_REQUEST_PARAMETERS"
      description: 検索条件を設定
    inline_response_200_29:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_29_data"
    filter_target_body_2:
      properties:
        rest_key_name:
          $ref: "#/components/schemas/FILTER_REQUEST_PARAMETERS"
      description: 検索条件を設定
    compare_execute_body:
      properties:
        compare:
          type: string
          example: compare_name
        base_date_1:
          type: string
          example: YYYY/MM/DD hh:mm:ss
        base_date_2:
          type: string
          example: YYYY/MM/DD hh:mm:ss
        host:
          type: array
          items:
            example: host_name
      description: 比較条件を設定
    execute_output_body:
      properties:
        compare:
          type: string
          example: compare_name
        base_date_1:
          type: string
          example: YYYY/MM/DD hh:mm:ss
        base_date_2:
          type: string
          example: YYYY/MM/DD hh:mm:ss
        host:
          type: array
          items:
            example: host_name
      description: 比較条件を設定
    inline_response_200_30:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_30_data"
    execute_file_body:
      properties:
        compare:
          type: string
          example: compare_name
        base_date_1:
          type: string
          example: YYYY/MM/DD hh:mm:ss
        base_date_2:
          type: string
          example: YYYY/MM/DD hh:mm:ss
        host:
          type: string
          example: host_name
        copmare_target_column:
          type: string
          example: target_colum
      description: 比較条件を設定
    terraform_organization_body:
      properties:
        tf_organization_name:
          type: string
          example: example_organization
        email_address:
          type: string
          example: example@example.com
      description: Organization名およびemailを指定
    organization_tf_organization_name_body:
      properties:
        email_address:
          type: string
          example: example@example.com
      description: emailを指定
    workspace_tf_organization_name_body:
      properties:
        tf_workspace_name:
          type: string
          example: example_workspace
        terraform_version:
          type: string
          example: 1.0.0
      description: Workspace名およびVersionを指定(Versionがnullの場合、自動的に最新のVersionが適用されます。)
    tf_organization_name_tf_workspace_name_body:
      properties:
        terraform_version:
          type: string
          example: 1.0.0
      description: Versionを指定
    download_policy_name_body:
      properties:
        download_path:
          type: string
          example: /api/v2/policies/pol-xxxxxxxxxx/download
      description: policyコードのダウンロードパスを記載
    inline_response_200_31:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            $ref: "#/components/schemas/inline_response_200_31_data"
    filter_menu_body:
      properties:
        rest_key_name:
          $ref: "#/components/schemas/FILTER_REQUEST_PARAMETERS"
      description: 検索条件を設定
    event_flow_history_body:
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        evaluted:
          type: boolean
          example: true
        undetected:
          type: boolean
          example: false
        timeouted:
          type: boolean
          example: false
      description: 検索条件を指定
    inline_response_200_32:
      allOf:
      - $ref: "#/components/schemas/responseOk"
      - type: object
        properties:
          data:
            type: array
            example: []
            items:
              $ref: "#/components/schemas/inline_response_200_32_data"
    ita_apply_body:
      type: object
      properties:
        conductor_class_name:
          type: string
        operation_name:
          type: string
          nullable: true
        schedule_date:
          type: string
          nullable: true
          example: YYYY/MM/DD hh:mm
        parameter_info:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/ApplyParameterTypeA"
          - $ref: "#/components/schemas/ApplyParameterTypeB"
          - $ref: "#/components/schemas/ApplyParameterTypeC"
          - $ref: "#/components/schemas/ApplyParameterTypeD"
      description: 適用するパラメータ情報および作業実行するConductorの構成情報
    FILTER_REQUEST_PARAMETERS_RANGE:
      type: object
      properties:
        START:
          type: string
        END:
          type: string
    FILTER_PARAMETERS_parameter:
      type: object
      properties:
        rest_key_name:
          type: string
      example:
        rest_key_name: rest_key_name
    FILTER_PARAMETERS_file:
      type: object
      properties:
        rest_key_name:
          type: string
          example: base64 encode file（empty string if ?file=no）
      example:
        rest_key_name: base64 encode file（empty string if ?file=no）
    MAINTENANCE_PARAMETERS_file:
      type: object
      properties:
        rest_key_name:
          type: string
          example: base64 encode file
    NODE_RESULT_node_name:
      type: object
      properties:
        node_instance_id:
          type: string
          example: NodeインスタンスID
        node_name:
          type: string
          example: Node名
        node_type:
          type: string
          example: Node種別
        status_id:
          type: string
          example: ステータスID
        status_file:
          type: string
          example: ステータスファイル
        skip:
          type: string
          example: スキップ
        remarks:
          type: string
          example: 備考
        time_start:
          type: string
          example: 開始日時
        time_end:
          type: string
          example: 終了日時
        operation_id:
          type: string
          example: オペレーションID
        operation_name:
          type: string
          example: オペレーション名
        jump:
          type: object
          example:
            menu_id: メニューID
            execution_id: 作業ID
    ApplyParameterTypeA_inner:
      type: object
      properties:
        rest_key_name:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              parameter:
                type: object
                properties:
                  rest_key_name:
                    type: string
              file:
                type: object
                properties:
                  rest_key_name:
                    type: string
                    example: base64 encode file
    ApplyParameterTypeB_inner:
      type: object
      properties:
        rest_key_name:
          type: object
          properties:
            type:
              type: string
            parameter:
              type: object
              properties:
                rest_key_name:
                  type: string
            file:
              type: object
              properties:
                rest_key_name:
                  type: string
                  example: base64 encode file
    ApplyParameterTypeC_rest_key_name:
      type: object
      properties:
        type:
          type: string
        parameter:
          $ref: "#/components/schemas/FILTER_PARAMETERS_parameter"
        file:
          $ref: "#/components/schemas/MAINTENANCE_PARAMETERS_file"
    inline_response_200_data:
      type: object
      properties:
        column_group_info:
          $ref: "#/components/schemas/COLUMN_GROUP_INFO"
        column_info:
          $ref: "#/components/schemas/COLUMN_INFO"
        menu_info:
          $ref: "#/components/schemas/MENU_INFO"
    inline_response_200_10_data:
      type: object
      properties:
        Discard:
          type: number
        IdList:
          type: array
          example: []
          items:
            type: string
        Register:
          type: number
        Restore:
          type: number
        Update:
          type: number
    inline_response_200_11_data:
      type: object
      properties:
        roles:
          example:
          - role1
          - role2
          - role3
        user_id:
          example: id-xxxxxxxx
        user_name:
          example: User Name
        workspaces:
          example:
          - workspace1
          - workspace2
          - workspace3
        table_settings:
          type: object
    inline_response_200_12_data:
      type: object
      properties:
        menu_groups:
          example:
          - disp_seq: 10
            id: "101"
            parent_id: ""
            menu_group_name: メニューグループ1
            menus:
            - disp_seq: 10
              id: "10101"
              menu_name: メニュー1
              menu_name_rest: menu_1
            - disp_seq: 20
              id: "10102"
              menu_name: メニュー2
              menu_name_rest: menu_2
            - disp_seq: 30
              id: "10103"
              menu_name: メニュー3
              menu_name_rest: menu_3
          - disp_seq: 20
            id: "102"
            parent_id: "101"
            menu_group_name: メニューグループ2
            menus:
            - disp_seq: 10
              id: "10104"
              menu_name: メニュー4
              menu_name_rest: menu_4
            - disp_seq: 20
              id: "10105"
              menu_name: メニュー5
              menu_name_rest: menu_5
            - disp_seq: 30
              id: "10106"
              menu_name: メニュー6
              menu_name_rest: menu_6
          - disp_seq: 30
            id: "103"
            parent_id: "101"
            menu_group_name: メニューグループ3
            menus:
            - disp_seq: 10
              id: "10107"
              menu_name: メニュー7
              menu_name_rest: menu_7
            - disp_seq: 20
              id: "10108"
              menu_name: メニュー8
              menu_name_rest: menu_8
            - disp_seq: 30
              id: "10109"
              menu_name: メニュー9
              menu_name_rest: menu_9
    inline_response_200_19_data:
      type: object
      properties:
        list:
          $ref: "#/components/schemas/CONDUCTOR_INFO_LIST"
        dict:
          $ref: "#/components/schemas/CONDUCTOR_INFO_DICT"
    inline_response_200_20_data:
      type: object
      properties:
        conductor_list:
          $ref: "#/components/schemas/inline_response_200_data"
        operation_list:
          $ref: "#/components/schemas/inline_response_200_data"
    inline_response_200_21_data:
      type: object
      properties:
        conductor_class:
          type: object
        conductor:
          $ref: "#/components/schemas/CONDUCTOR_RESULT"
        node:
          $ref: "#/components/schemas/NODE_RESULT"
    inline_response_200_22_data:
      type: object
      properties:
        file_name:
          type: string
          example: "InputData_Conductor_{conductor_instance_id}.zip"
        file_data:
          type: string
          example: All movement input data zip base64 string
    inline_response_200_23_data:
      type: object
      properties:
        file_name:
          type: string
          example: "ResultData_Conductor_{conductor_instance_id}.zip"
        file_data:
          type: string
          example: All movement result data zip base64 string
    inline_response_200_25_data:
      type: object
      properties:
        movement_list:
          $ref: "#/components/schemas/inline_response_200_data"
        operation_list:
          $ref: "#/components/schemas/inline_response_200_data"
    inline_response_200_26_data:
      type: object
      properties:
        menu_groups:
          type: array
          items:
            type: object
            example:
              disp_seq: "10"
              id: "101"
              menu_group_name: 管理コンソール
              menus:
                items:
                  disp_seq: 10
                  id: "10101"
                  menu_name: システム設定
                  menu_name_rest: system_settings
    inline_response_200_27_data:
      type: object
      properties:
        execution_no:
          type: string
          example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    inline_response_200_28_data_import_list:
      properties:
        menu_groups:
          type: array
          items:
            type: object
            example:
              disp_seq: 10
              id: "101"
              menu_group_name: 管理コンソール
              menu_group_name_en: Management Console
              menu_group_name_ja: 管理コンソール
              menus:
                items:
                  type: object
                  example:
                    disp_seq: 10
                    id: "10101"
                    menu_name: システム設定
                    menu_name_en: System settings
                    menu_name_ja: システム設定
                    menu_name_rest: system_settings
    inline_response_200_28_data:
      type: object
      properties:
        upload_id:
          type: string
          example: xxxxxxxxxxxxxxxxxxxxxxxx
        file_name:
          type: string
          example: ita_exportdata_yyyymmddhhiiss.kym
        mode:
          type: string
          example: "1: 環境移行 / 2: 時刻指定"
        specified_time:
          type: string
          example: YYYY/MM/DD hh:mm
        abolished_type:
          type: string
          example: "1: 廃止を含む / 2: 廃止を除く"
        journal_type:
          type: string
          example: "1: 履歴あり / 2: 履歴なし"
        import_list:
          $ref: "#/components/schemas/inline_response_200_28_data_import_list"
    inline_response_200_29_data:
      type: object
      properties:
        compare_list:
          $ref: "#/components/schemas/inline_response_200_data"
        device_list:
          $ref: "#/components/schemas/inline_response_200_data"
    inline_response_200_30_data:
      type: object
      properties:
        file_name:
          type: string
          example: "{compare_name}_YYYY/MMDDhhmmss.xlsx"
        file_data:
          type: string
          example: Compare result base64 string
    inline_response_200_31_data:
      type: object
      properties:
        file:
          type: string
          example: base64 string
        file_name:
          type: string
    inline_response_200_32_data:
      type: object
      properties:
        datetime:
          type: string
          example: 2023-09-12 15:41:29
        id:
          type: string
        item:
          type: object
          description: イベント履歴かアクション履歴から取得した内容
        type:
          type: string
          description: "取得元を判断するための文字列。イベント履歴：event, アクション履歴：action"
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  examples:
    MENU_UPLOAD_FORM:
      value: |
        Content-Disposition: form-data; name="ita_exportdata_XXXXXXXXXXXX.kym"; filename="ita_exportdata_XXXXXXXXXXXX.kym"
        Content-Type: application/octet-stream
        (binary content of the file)
    EXCEL_BULK_UPLOAD_FORM:
      value: |
        Content-Disposition: form-data; name="ITA_FILES_XXXXXXXXXXXXXXXXX.zip"; filename="ITA_FILES_XXXXXXXXXXXXXXXXX.zip"
        Content-Type: application/x-zip-compressed
        (binary content of the file)
    menu.maintenance.all.yaml:
      description: example requestBody of maintenance all
      value:
      - parameter:
          discard: "0"
          file_embedded_variable_name: string
          file_id: string
          files: string
          last_update_date_time: 2025/01/01 10:00:00.000000
          last_updated_user: string
        type: Register
      - parameter:
          discard: "0"
          file_embedded_variable_name: string
          file_id: string
          files: string
          last_update_date_time: 2025/01/01 10:00:00.000000
          last_updated_user: string
        type: Update
      - parameter:
          file_id: string
        type: Delete
    menu.maintenance.all.operation_list.yaml:
      description: example maintenance all request body in the operation list menu
      value: |
        [
          {
            "parameter": {
                "discard": "0",
                "environment": null,
                "language": "ja",
                "last_run_date": null,
                "last_update_date_time": "2025/06/05 13:56:58.567068",
                "last_updated_user": "user",
                "operation_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "operation_name": "example",
                "remarks": null,
                "scheduled_date_for_execution": "2025/06/05 13:54:33"
            },
            "type": "Update"
          },
          {
            "parameter": {
                "discard": "0",
                "environment": null,
                "language": "ja",
                "last_run_date": null,
                "last_update_date_time": "2025/06/05 13:56:58.567068",
                "last_updated_user": "user",
                "operation_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "operation_name": "example",
                "remarks": null,
                "scheduled_date_for_execution": "2025/06/05 13:54:33"
            },
            "type": "Update"
          },
          {
            "parameter": {
                "last_update_date_time": "2025/06/05 13:56:58.567068",
                "operation_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "type": "Delete"
          }
        ]
    menu.maintenance.all.data_sheet.yaml:
      description: example maintenance all request body in the data sheet / prameter
        sheet menu
      value: |
        [
          {
            "parameter": {
                "discard": "0",
                "item_1": "string",
                "item_2": 1,
                "item_3": null,
                "item_4": "example.json",
                "item_5": "example.txt",
                "last_update_date_time": "2025/06/05 11:22:35.443578",
                "last_updated_user": "user",
                "remarks": null,
                "uuid": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "type": "Update"
          },
          {
            "parameter": {
                "discard": "0",
                "item_1": "string",
                "item_2": 1,
                "item_3": null,
                "item_4": "example.json",
                "item_5": "example.txt",
                "last_update_date_time": "2025/06/05 11:22:35.443578",
                "last_updated_user": "user",
                "remarks": null,
                "uuid": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "type": "Update"
          },
          {
            "parameter": {
                "last_update_date_time": "2025/06/05 11:22:35.443578",
                "uuid": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            },
            "type": "Delete"
          }
        ]
    menu.maintenance.all.execution_list_ansible_legacy.yaml:
      description: example maintenance all request body in the execution list ansible_legacy
        menu
      value: |
        [
          {
            "parameter": {
                "execution_no": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "last_update_date_time": "2025/06/05 16:40:11.846538"
            },
            "type": "Delete"
          }
        ]
  securitySchemes:
    BearerAuth:
      type: http
      description: Credentials or access token for API
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_BearerAuth
    BasicAuth:
      type: http
      description: Value converted from ID/Password in base64
      scheme: basic
      x-basicInfoFunc: swagger_server.controllers.authorization_controller.check_BasicAuth

