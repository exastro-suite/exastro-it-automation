openapi: 3.0.3
info:
  title: Exastro ITA OASE Receiver API
  description: Exastro ITA OASE Receiver API
  version: "2.4"
servers:
- url: "https://{host}"
  description: API endpoint
  variables:
    host:
      default: localhost
- url: "http://{host}"
  description: API endpoint
  variables:
    host:
      default: localhost
- url: "{protocol}://{host}:{port}"
  description: API endpoint (Development)
  variables:
    protocol:
      default: https
      enum:
      - http
      - https
    host:
      default: localhost
    port:
      default: "30080"
tags:
- name: Ansible Execution
  description: Ansibleの情報を取得
paths:
  /api/{organization_id}/workspaces/{workspace_id}/ansible_execution_agent/unexecuted/instance:
    get:
      tags:
      - Ansible Execution
      description: 未実行インスタンス取得
      operationId: get_unexecuted_instance
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
      x-openapi-router-controller: controllers.ansible_receiver_controller
  /api/{organization_id}/workspaces/{workspace_id}/ansible_execution_agent/execution/{status}:
    get:
      tags:
      - Ansible Execution
      description: 作業状態通知
      operationId: execution_status_notification
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: ステータス
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
      x-openapi-router-controller: controllers.ansible_receiver_controller
  /api/{organization_id}/workspaces/{workspace_id}/ansible_execution_agent/populated_data:
    get:
      tags:
      - Ansible Execution
      description: 投入データ取得
      operationId: get_populated_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
      x-openapi-router-controller: controllers.ansible_receiver_controller
  /api/{organization_id}/workspaces/{workspace_id}/ansible_execution_agent/{execution_no}/{driver_id}/{status}/result_data:
    post:
      tags:
      - Ansible Execution
      description: 結果データ受け取り・更新
      operationId: update_result_data
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: execution_no
        in: path
        description: 作業番号
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: driver_id
        in: path
        description: ドライバーID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: ステータス
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/status_result_data_body'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/status_result_data_body_1'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
      x-openapi-router-controller: controllers.ansible_receiver_controller
  /api/{organization_id}/workspaces/{workspace_id}/ansible_execution_agent/version:
    get:
      tags:
      - Ansible Execution
      description: バージョン通知
      operationId: get_agent_version
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
      x-openapi-router-controller: controllers.ansible_receiver_controller
  /api/{organization_id}/workspaces/{workspace_id}/ansible_execution_agent/execution/notification:
    get:
      tags:
      - Ansible Execution
      description: 作業中通知
      operationId: execution_notification
      parameters:
      - name: organization_id
        in: path
        description: OrganizationID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        description: WorkspaceID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ERROR_TEMPLATE'
      x-openapi-router-controller: controllers.ansible_receiver_controller
components:
  schemas:
    ERROR_TEMPLATE:
      type: object
      properties:
        result:
          type: string
          example: 001-002
        message:
          type: string
    inline_response_200:
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        data:
          type: array
          example:
            execution_no:
              driver_id: string
              ans_vent_path: string
              build_type: string
              user_name: string
              password: string
              base_image: string
              anstwr_del_runtime_data: string
          items: {}
        message:
          type: string
      example:
        result: 000-00000
        data:
          execution_no:
            driver_id: string
            ans_vent_path: string
            build_type: string
            user_name: string
            password: string
            base_image: string
            anstwr_del_runtime_data: string
        message: message
    inline_response_200_1:
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        data:
          type: boolean
        message:
          type: string
      example:
        result: 000-00000
        data: true
        message: message
    inline_response_200_2:
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        data:
          type: array
          example:
            execution_no:
              in_out_data: string
              conductor_data: string
          items: {}
        message:
          type: string
      example:
        result: 000-00000
        data:
          execution_no:
            in_out_data: string
            conductor_data: string
        message: message
    apiorganization_idworkspacesworkspace_idansible_execution_agentexecution_nodriver_idstatusresult_data_file:
      type: object
      properties:
        rest_key_name:
          type: string
          example: base64 encode file
    status_result_data_body:
      properties:
        file:
          $ref: '#/components/schemas/apiorganization_idworkspacesworkspace_idansible_execution_agentexecution_nodriver_idstatusresult_data_file'
      description: 各種tarファイルを指定
    status_result_data_body_1:
      type: object
      properties:
        file:
          type: string
          description: 各種tarファイルを指定
          format: binary
    inline_response_200_3:
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        data:
          type: array
          example:
            agent_name: string
            version: string
          items: {}
        message:
          type: string
      example:
        result: 000-00000
        data:
          agent_name: string
          version: string
        message: message
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    BearerAuth:
      type: http
      description: Credentials or access token for API
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_BearerAuth
    BasicAuth:
      type: http
      description: Value converted from ID/Password in base64
      scheme: basic
      x-basicInfoFunc: swagger_server.controllers.authorization_controller.check_BasicAuth

