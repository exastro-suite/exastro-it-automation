# Default values for ita-setup.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  itaGlobalDefinition:
    name: ita-global
    enabled: true
    image:
      registry: "docker.io"
      organization: exastro
      package: exastro-it-automation
    config:
      DEFAULT_LANGUAGE: "ja"
      LANGUAGE: "en"
      CONTAINER_BASE: "kubernetes"
      TZ: "Asia/Tokyo"
      STORAGEPATH: "/storage/"
    secret:
      ENCRYPT_KEY: ""
    persistence:
      enabled: true
      reinstall: true
      accessMode: ReadWriteMany
      size: 10Gi
      volumeType: hostPath # e.g.) hostPath or AKS
      storageClass: "-" # e.g.) azurefile or - (None)
      # matchLabels: 
      #   release: "stable"
      # matchExpressions:
      #   - {key: environment, operator: In, values: [dev]}
  gitlabDefinition:
    name: gitlab
    enabled: true
    config:
      GITLAB_PROTOCOL: "http"
      GITLAB_HOST: "gitlab.exastro-platform.svc"
      GITLAB_PORT: "80"
    secret:
      GITLAB_ROOT_TOKEN: ""
  itaDatabaseDefinition:
    name: ita-database
    enabled: true
    config:
      DB_VENDOR: "mariadb"
      DB_HOST: "mariadb.exastro-platform.svc"
      DB_PORT: "3306"
      DB_DATABASE: "ITA_DB"
    secret:
      DB_ADMIN_USER: ""
      DB_ADMIN_PASSWORD: ""
      DB_USER: ""
      DB_PASSWORD: ""

extraEnv:
  LOG_LEVEL: "INFO"
  TIMEOUT: "10"

completionCount: 1

initContainerImage:
  repository: busybox
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

volumeMounts:
  mountPath:
    createDB: 
      path: /createdb.sql
      subPath: createdb.sql
    conf: 
      path: /etc/mysql/conf.d

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true

database:
  initContainerImage:
    repository: mariadb
    tag: "10.9"
    pullPolicy: IfNotPresent

  image:
    repository: mariadb
    tag: "10.9"
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  livenessCheck: |-
    #!/bin/bash
    i=1
    echo "HOST: ${DB_HOST}"
    until mysqladmin ping --host=${DB_HOST} --user=${DB_ADMIN_USER} --password=${DB_ADMIN_PASSWORD} --silent; do
      echo `date`": Can not connect to Database."
      sleep $i
      i=$(( i * 2 ))
    done
    echo `date`": Completely connect to Database."
    exit 0

  initializeDatabase: |-
    mysql --host=${DB_HOST} --user=${DB_ADMIN_USER} --password=${DB_ADMIN_PASSWORD} < /createdb.sql

  databaseConfig:
    name: mysqld-conf
    customCnf: |-
      [mysqld]
      character-set-server=utf8mb4
      collation-server=utf8mb4_bin
      secure_file_priv=/tmp
      [client]
      default-character-set=utf8mb4

  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true

